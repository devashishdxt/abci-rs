initSidebarItems({"enum":[["ApplySnapshotChunkResult",""],["CheckTxType",""],["OfferSnapshotResult",""],["Sum",""]],"struct":[["BlockId","BlockID"],["BlockParams","BlockParams contains limits on the block size."],["Consensus","Consensus captures the consensus rules for processing a block in the blockchain, including all blockchain data structures and the rules of the application's state transition machine."],["ConsensusParams","ConsensusParams contains all consensus-relevant parameters that can be adjusted by the abci app"],["Duration","A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". It is related to Timestamp in that the difference between two Timestamp values is a Duration and it can be added or subtracted from a Timestamp. Range is approximately +-10,000 years."],["Event","Event allows application developers to attach additional information to ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx. Later, transactions may be queried using these events."],["EventAttribute","EventAttribute is a single key-value pair, associated with an event."],["Evidence",""],["EvidenceParams","EvidenceParams determine how we handle evidence of malfeasance."],["Header","Header defines the structure of a Tendermint block header."],["LastCommitInfo",""],["PartSetHeader","PartsetHeader"],["ProofOp","ProofOp defines an operation used for calculating Merkle root The data could be arbitrary format, providing nessecary data for example neighbouring node hash"],["ProofOps","ProofOps is Merkle proof defined by the list of ProofOps"],["PublicKey","PublicKey defines the keys available for use with Tendermint Validators"],["RequestApplySnapshotChunk","Applies a snapshot chunk"],["RequestBeginBlock",""],["RequestCheckTx",""],["RequestCommit",""],["RequestDeliverTx",""],["RequestEcho",""],["RequestEndBlock",""],["RequestFlush",""],["RequestInfo",""],["RequestInitChain",""],["RequestListSnapshots","lists available snapshots"],["RequestLoadSnapshotChunk","loads a snapshot chunk"],["RequestOfferSnapshot","offers a snapshot to the application"],["RequestQuery",""],["RequestSetOption","nondeterministic"],["ResponseApplySnapshotChunk",""],["ResponseBeginBlock",""],["ResponseCheckTx",""],["ResponseCommit",""],["ResponseDeliverTx",""],["ResponseEcho",""],["ResponseEndBlock",""],["ResponseFlush",""],["ResponseInfo",""],["ResponseInitChain",""],["ResponseListSnapshots",""],["ResponseLoadSnapshotChunk",""],["ResponseOfferSnapshot",""],["ResponseQuery",""],["ResponseSetOption","nondeterministic"],["Snapshot",""],["Timestamp","A Timestamp represents a point in time independent of any time zone or local calendar, encoded as a count of seconds and fractions of seconds at nanosecond resolution. The count is relative to an epoch at UTC midnight on January 1, 1970, in the proleptic Gregorian calendar which extends the Gregorian calendar backwards to year one."],["Validator","Validator"],["ValidatorParams","ValidatorParams restrict the public key types validators can use. NOTE: uses ABCI pubkey naming, not Amino names."],["ValidatorUpdate","ValidatorUpdate"],["VersionParams","VersionParams contains the ABCI application version."],["VoteInfo","VoteInfo"]]});